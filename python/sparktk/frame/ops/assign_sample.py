
# @api
# @arg('sample_percentages', list, "Entries are non-negative and sum to 1. (See the note below.)
#                          If the *i*'th entry of the  list is *p*, then then each row
#                          receives label *i* with independent probability *p*.")
# @arg('sample_labels', list, "Names to be used for the split classes. Defaults to 'TR', 'TE',
#                          'VA' when the length of *sample_percentages* is 3, and defaults
#                          to Sample_0, Sample_1, ... otherwise.")
# @arg('output_column', string, "Name of the new column which holds the labels generated by the
#                     function")
# @arg('random_seed', int, "Random seed used to generate the labels.  Defaults to 0.")
def assign_sample(self, sample_percentages,
                  sample_labels = None,
                  output_column = None,
                  random_seed = None):
    """
    TODO: Add description and example for assign_sample
    """

    self._scala.assignSample(self._context.jutils.convert.to_scala_list_double(sample_percentages),
                             self._context.jutils.convert.to_scala_option(sample_labels),
                            self._context.jutils.convert.to_scala_option(output_column),
                            self._context.jutils.convert.to_scala_option(random_seed))
